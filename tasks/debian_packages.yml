- include_vars: "{{ ansible_distribution }}.yml"
- name: install tailscale (Debian)
  become_user: velociraptor
  tags: "apt,package,install"
  shell: curl -fsSL https://tailscale.com/install.sh | sh
  when: ansible_distribution == "Pop!_OS"

- name: get ProtonVPN .deb
  become_user: velociraptor
  get_url:
    url: https://repo.protonvpn.com/debian/dists/stable/main/binary-all/{{ protonvpn }}.deb
    dest: /tmp/{{ protonvpn }}.deb
  when: ansible_distribution == "Pop!_OS"
#- name: get ProtonVPN .deb
#  become_user: velociraptor
#  get_url:
#    url: https://repo.protonvpn.com/debian/dists/stable/main/binary-all/{{ protonvpn }}.deb
#    dest: /tmp/{{ protonvpn }}.deb
#  when: ansible_distribution == "Pop!_OS"

- name: install ProtonVPN .deb 
  become: true
  apt:
    deb: /tmp/{{ protonvpn }}.deb
  when: ansible_distribution == "Pop!_OS"

- name: get Portmaster .deb
  become_user: velociraptor
  get_url:
    url: https://updates.safing.io/latest/linux_amd64/packages/portmaster-installer.deb
    dest: /tmp/portmaster.deb
  when: ansible_distribution == "Pop!_OS"

- name: install Portmaster .deb 
  become: true
  apt:
    deb: /tmp/portmaster.deb
  when: ansible_distribution == "Pop!_OS"
- name: install packages (Debian)
  become: true
  tags: "apt,package,install"
  apt:
    update_cache: yes
    name:
      - btop
      - nala
      - tmux
      - cron
      - bat
      - rsync
      - vim
      - cmake
      - flatpak
      - tailscale 
      - autofs
      - fonts-jetbrains-mono
      - ttf-bitstream-vera
      - fonts-font-awesome
      - exa 
      - alacritty  
      - lfm
      - stow
      - rofi
      - cargo
      - qemu-kvm 
      - qemu-system 
      - qemu-utils 
      - python3 
      - python3-pip 
      - btrbk
      - libvirt-clients 
      - libvirt-daemon-system 
      - bridge-utils 
      - virtinst
      - libvirt-daemon 
      - virt-manager

    state: present 
  when: ansible_distribution == "Pop!_OS"

- name: Restart service autofs, in all cases
  ansible.builtin.service:
    name: libvirtd
    state: started

- name: install starship 
  become_user: jaziel
  shell: cargo install starship
  tags: "cargo,package"
  when: ansible_distribution == "Pop!_OS"

- name: Add directory to PATH
  tags: "cargo,path"
  lineinfile:
    path: /etc/environment
    state: present
    regexp: '^PATH='
    line: 'PATH="/home/jaziel/.cargo/bin:{{ ansible_env.PATH }}"'


- name: Add the flathub flatpak repository remote to the user installation
  tags: "flatpak,package,install"
  flatpak_remote:
    name: flathub
    state: present
    flatpakrepo_url: https://flathub.org/repo/flathub.flatpakrepo 
    method: system
  when: ansible_distribution == "Pop!_OS"
- name: install flatpaks
  shell: flatpak install -y --system {{item}}
  with_items: 
    - com.bitwarden.desktop 
    - org.onlyoffice.desktopeditors 
    - us.zoom.Zoom 
    - org.mozilla.Thunderbird 
    - org.signal.Signal 
    - com.discordapp.Discord 
    - com.borgbase.Vorta
      #    state: present 
      #   remote: flathub
  when: ansible_distribution == "Pop!_OS"

   
